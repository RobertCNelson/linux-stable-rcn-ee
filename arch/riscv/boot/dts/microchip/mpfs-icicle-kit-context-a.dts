// SPDX-License-Identifier: (GPL-2.0 OR MIT)
/* Copyright (c) 2020-2021 Microchip Technology Inc */

/dts-v1/;

#include "mpfs.dtsi"
#include "mpfs-icicle-kit-fabric.dtsi"

/* Clock frequency (in Hz) of the rtcclk */
#define RTCCLK_FREQ		1000000

/ {
	#address-cells = <2>;
	#size-cells = <2>;
	model = "Microchip PolarFire-SoC Icicle Kit";
	compatible = "microchip,mpfs-icicle-reference-rtlv2210", "microchip,mpfs-icicle-kit",
		     "microchip,mpfs";

	soc {
		dma-ranges = <0x14 0x0 0x0 0x80000000 0x0 0x4000000>,
			     <0x14 0x4000000 0x0 0xc4000000 0x0 0x6000000>,
			     <0x14 0xa000000 0x0 0x8a000000 0x0 0x8000000>,
			     <0x14 0x12000000 0x14 0x12000000 0x0 0x10000000>,
			     <0x14 0x22000000 0x10 0x22000000 0x0 0x5e000000>;
	};

	aliases {
		ethernet0 = &mac1;
		serial0 = &mmuart0;
		serial1 = &mmuart1;
		serial2 = &mmuart2;
		serial3 = &mmuart3;
		serial4 = &mmuart4;
	};

	chosen {
		stdout-path = "serial1:115200n8";
	};

	cpus {
		timebase-frequency = <RTCCLK_FREQ>;
	};

	kernel: memory@80000000 {
		device_type = "memory";
		reg = <0x0 0x80000000 0x0 0x4000000>;
	};

	ddr_cached_low: memory@8a000000 {
		device_type = "memory";
		reg = <0x0 0x8a000000 0x0 0x8000000>;
	};

	ddr_non_cached_low: memory@c4000000 {
		device_type = "memory";
		reg = <0x0 0xc4000000 0x0 0x6000000>;
	};

	ddr_cached_high: memory@1022000000 {
		device_type = "memory";
		reg = <0x10 0x22000000 0x0 0x5e000000>;
	};

	ddr_non_cached_high: memory@1412000000 {
		device_type = "memory";
		reg = <0x14 0x12000000 0x0 0x10000000>;
	};

	reserved-memory {
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;

		hss: hss-buffer@103fc00000 {
			compatible = "shared-dma-pool";
			reg = <0x10 0x3fc00000 0x0 0x400000>;
			no-map;
		};

		dma_non_cached_low: non-cached-low-buffer {
			compatible = "shared-dma-pool";
			size = <0x0 0x4000000>;
			no-map;
			linux,dma-default;
			alloc-ranges = <0x0 0xc4000000 0x0 0x4000000>;
		};

		dma_non_cached_high: non-cached-high-buffer {
			compatible = "shared-dma-pool";
			size = <0x0 0x10000000>;
			no-map;
			linux,dma-default;
			alloc-ranges = <0x14 0x12000000 0x0 0x10000000>;
		};

		fabricbuf0ddrc: buffer@88000000 {
			compatible = "shared-dma-pool";
			reg = <0x0 0x88000000 0x0 0x2000000>;
			no-map;
		};

		fabricbuf1ddrnc: buffer@c8000000 {
			compatible = "shared-dma-pool";
			reg = <0x0 0xc8000000 0x0 0x2000000>;
			no-map;
		};

		fabricbuf2ddrncwcb: buffer@d8000000 {
			compatible = "shared-dma-pool";
			reg = <0x0 0xd8000000 0x0 0x2000000>;
			no-map;
		};

		contextb_reserved: contextb_reserved@91c00000 {
			reg = <0x0 0x91c00000 0x0 0x100000>;
			no-map;
		};

		vdev0vring0: vdev0vring0@91d00000 {
			reg = <0x0 0x91d00000 0x0 0x8000>;
			no-map;
		};

		vdev0vring1: vdev0vring1@91d08000 {
			reg = <0x0 0x91d08000 0x0 0x8000>;
			no-map;
		};

		vdev0buffer: vdev0buff@91d10000 {
			compatible = "shared-dma-pool";
			reg = <0x0 0x91d10000 0x0 0x40000>;
			no-map;
		};

		rsctable: rsc-table@91d50000 {
			reg = <0x0 0x91d50000 0x0 0x1000>;
			no-map;
		};
	};

	rproc_contextb: remote-context {
		compatible = "microchip,miv-remoteproc";
		memory-region = <&vdev0buffer>, <&rsctable>,
				<&contextb_reserved>, <&vdev0vring0>,
				<&vdev0vring1>;
		mboxes= <&ihc 0>;
		status = "okay";
	};

	udmabuf0 {
		compatible = "ikwzm,u-dma-buf";
		device-name = "udmabuf-ddr-c0";
		minor-number = <0>;
		size = <0x0 0x2000000>;
		memory-region = <&fabricbuf0ddrc>;
		sync-mode = <3>;
	};

	udmabuf1 {
		compatible = "ikwzm,u-dma-buf";
		device-name = "udmabuf-ddr-nc0";
		minor-number = <1>;
		size = <0x0 0x2000000>;
		memory-region = <&fabricbuf1ddrnc>;
		sync-mode = <3>;
	};

	udmabuf2 {
		compatible = "ikwzm,u-dma-buf";
		device-name = "udmabuf-ddr-nc-wcb0";
		minor-number = <2>;
		size = <0x0 0x2000000>;
		memory-region = <&fabricbuf2ddrncwcb>;
		sync-mode = <3>;
	};
};

&can0 {
	status = "okay";
};

&core_pwm0 {
	status = "okay";
};

&cpu4 {
	status = "disabled"; // in use by context b
};

&i2c0 {
	status = "okay";
};

&i2c1 {
	status = "okay";

	pac193x: adc@10 {
		compatible = "microchip,pac1934";
		reg = <0x10>;
		microchip,samp-rate = <64>;
		status = "okay";

		ch0: channel0 {
			microchip,uohms-shunt-res = <10000>;
			rail-name = "VDDREG";
			microchip,channel-enabled;
		};

		ch1: channel1 {
			microchip,uohms-shunt-res = <10000>;
			rail-name = "VDDA25";
			microchip,channel-enabled;
		};

		ch2: channel2 {
			microchip,uohms-shunt-res = <10000>;
			rail-name = "VDD25";
			microchip,channel-enabled;
		};

		ch3: channel3 {
			microchip,uohms-shunt-res = <10000>;
			rail-name = "VDDA_REG";
			microchip,channel-enabled;
		};
	};
};

&i2c2 {
	status = "okay";
};

&ihc {
	status = "okay";
};

&fpgadma {
	status = "okay";
};

&fpgalsram {
	status = "okay";
};

&gpio2 {
	interrupts = <53>, <53>,
		     <53>, <53>,
		     <53>, <53>,
		     <53>, <53>,
		     <53>, <53>,
		     <53>, <53>,
		     <53>, <53>,
		     <53>, <53>,
		     <53>, <53>,
		     <53>, <53>,
		     <53>, <53>,
		     <53>, <53>,
		     <53>, <53>,
		     <53>, <53>,
		     <53>, <53>,
		     <53>, <53>;
	status = "okay";
};

&mac0 {
	dma-noncoherent;
	status = "okay";
	phy-mode = "sgmii";
	phy-handle = <&phy0>;
};

&mac1 {
	dma-noncoherent;
	status = "okay";
	phy-mode = "sgmii";
	phy-handle = <&phy1>;

	phy1: ethernet-phy@9 {
		reg = <9>;
	};

	phy0: ethernet-phy@8 {
		reg = <8>;
	};
};

&mbox {
	status = "okay";
};

&mmc {
	dma-noncoherent;
	bus-width = <4>;
	disable-wp;
	cap-sd-highspeed;
	cap-mmc-highspeed;
	mmc-ddr-1_8v;
	mmc-hs200-1_8v;
	sd-uhs-sdr12;
	sd-uhs-sdr25;
	sd-uhs-sdr50;
	sd-uhs-sdr104;
	status = "okay";
};

&mmuart1 {
	status = "okay";
};

&mmuart2 {
	status = "okay";
};

&mmuart3 {
	status = "disabled"; // in use by context b
};

&mmuart4 {
	status = "okay";
};

&pcie {
	status = "okay";
};

&qspi {
	status = "okay";
};

&refclk {
	clock-frequency = <125000000>;
};

&refclk_ccc {
	clock-frequency = <50000000>;
};

&rtc {
	status = "okay";
};

&spi0 {
	status = "okay";
};

&spi1 {
	status = "okay";
};

&syscontroller {
	status = "okay";
};

&syscontroller_qspi {
	/*
	 * The flash *is* there, but Icicle kits that have engineering sample
	 * silicon where access to this flash to non-functional. The system
	 * controller itself can actually access it, but the MSS cannot write
	 * an image there. Instantiating a coreQSPI in the fabric & connecting
	 * it to the flash instead should work though. Pre-production or later
	 * silicon does not have this issue.
	 */
	status = "disabled";

	sys_ctrl_flash: flash@0 { // MT25QL01GBBB8ESF-0SIT
		compatible = "jedec,spi-nor";
		#address-cells = <1>;
		#size-cells = <1>;
		spi-max-frequency = <20000000>;
		spi-rx-bus-width = <1>;
		reg = <0>;
	};
};

&usb {
	dma-noncoherent;
	status = "okay";
	dr_mode = "otg";
};
