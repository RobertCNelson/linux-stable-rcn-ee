// SPDX-License-Identifier: (GPL-2.0 OR MIT)
/* Copyright (c) 2020-2021 Microchip Technology Inc */

/dts-v1/;

#include "microchip-mpfs.dtsi"

/* Clock frequency (in Hz) of the rtcclk */
#define RTCCLK_FREQ		1000000

/ {
	model = "Microchip PolarFire-SoC Icicle Kit";
	compatible = "microchip,mpfs-icicle-kit", "microchip,mpfs";

	aliases {
		mmuart0 = &mmuart0;
		mmuart1 = &mmuart1;
		mmuart2 = &mmuart2;
		mmuart3 = &mmuart3;
		mmuart4 = &mmuart4;
	};

	chosen {
		stdout-path = "mmuart1:115200n8";
	};

	cpus {
		timebase-frequency = <RTCCLK_FREQ>;
	};

	reserved-memory {
		ranges;
		#size-cells = <2>;
		#address-cells = <2>;

		fabricbuf0: fabricbuf@0 {
			compatible = "shared-dma-pool";
			reg = <0x0 0xae000000 0x0 0x2000000>;
			label = "fabricbuf0-ddr-c";
		};

		fabricbuf1: fabricbuf@1 {
			compatible = "shared-dma-pool";
			reg = <0x0 0xc0000000 0x0 0x8000000>;
			label = "fabricbuf1-ddr-nc";
		};

		fabricbuf2: fabricbuf@2 {
			compatible = "shared-dma-pool";
			reg = <0x0 0xd8000000 0x0 0x8000000>;
			label = "fabricbuf2-ddr-nc-wcb";
		};
	};

	udmabuf0 {
		compatible = "ikwzm,u-dma-buf";
		device-name = "udmabuf-ddr-c0";
		minor-number = <0>;
		size = <0x0 0x2000000>;
		memory-region = <&fabricbuf0>;
		sync-mode = <3>;
	};

	udmabuf1 {
		compatible = "ikwzm,u-dma-buf";
		device-name = "udmabuf-ddr-nc0";
		minor-number = <1>;
		size = <0x0 0x8000000>;
		memory-region = <&fabricbuf1>;
		sync-mode = <3>;
	};

	udmabuf2 {
		compatible = "ikwzm,u-dma-buf";
		device-name = "udmabuf-ddr-nc-wcb0";
		minor-number = <2>;
		size = <0x0 0x8000000>;
		memory-region = <&fabricbuf2>;
		sync-mode = <3>;
	};

	ddrc_cache_lo: memory@80000000 {
		device_type = "memory";
		reg = <0x0 0x80000000 0x0 0x2e000000>;
		clocks = <&clkcfg CLK_DDRC>;
		status = "okay";
	};

	ddrc_cache_hi: memory@1000000000 {
		device_type = "memory";
		reg = <0x10 0x0 0x0 0x40000000>;
		clocks = <&clkcfg CLK_DDRC>;
		status = "okay";
	};
};

&mmuart1 {
	status = "okay";
};

&mmuart2 {
	status = "okay";
};

&mmuart3 {
	status = "okay";
};

&mmuart4 {
	status = "okay";
};

&mmc {
	status = "okay";
};

&spi0 {
	status = "okay";
	spidev@0 {
		compatible = "linux,spidev";
		reg = <0>; /* CS 0 */
		spi-max-frequency = <10000000>;
		status = "okay";
	};
};

&spi1 {
	status = "okay";
};

&qspi {
	status = "okay";
};

&i2c1 {
	status = "okay";
	pac193x: pac193x@10 {
		compatible = "microchip,pac1934";
		reg = <0x10>;
		samp-rate = <64>;
		status = "okay";
		ch0: channel0 {
			uohms-shunt-res = <10000>;
			rail-name = "VDDREG";
			channel_enabled;
		};
		ch1: channel1 {
			uohms-shunt-res = <10000>;
			rail-name = "VDDA25";
			channel_enabled;
		};
		ch2: channel2 {
			uohms-shunt-res = <10000>;
			rail-name = "VDD25";
			channel_enabled;
		};
		ch3: channel3 {
			uohms-shunt-res = <10000>;
			rail-name = "VDDA_REG";
			channel_enabled;
		};
	};
};

&can0 {
	status = "okay";
};

&mac0 {
	status = "okay";
	phy-mode = "sgmii";
	phy-handle = <&phy0>;
};

&mac1 {
	status = "okay";
	phy-mode = "sgmii";
	phy-handle = <&phy1>;
	phy1: ethernet-phy@9 {
		reg = <9>;
		ti,fifo-depth = <0x1>;
	};
	phy0: ethernet-phy@8 {
		reg = <8>;
		ti,fifo-depth = <0x1>;
	};
};

&gpio2 {
	interrupts = <PLIC_INT_GPIO2_NON_DIRECT
		PLIC_INT_GPIO2_NON_DIRECT
		PLIC_INT_GPIO2_NON_DIRECT
		PLIC_INT_GPIO2_NON_DIRECT
		PLIC_INT_GPIO2_NON_DIRECT
		PLIC_INT_GPIO2_NON_DIRECT
		PLIC_INT_GPIO2_NON_DIRECT
		PLIC_INT_GPIO2_NON_DIRECT
		PLIC_INT_GPIO2_NON_DIRECT
		PLIC_INT_GPIO2_NON_DIRECT
		PLIC_INT_GPIO2_NON_DIRECT
		PLIC_INT_GPIO2_NON_DIRECT
		PLIC_INT_GPIO2_NON_DIRECT
		PLIC_INT_GPIO2_NON_DIRECT
		PLIC_INT_GPIO2_NON_DIRECT
		PLIC_INT_GPIO2_NON_DIRECT
		PLIC_INT_GPIO2_NON_DIRECT
		PLIC_INT_GPIO2_NON_DIRECT
		PLIC_INT_GPIO2_NON_DIRECT
		PLIC_INT_GPIO2_NON_DIRECT
		PLIC_INT_GPIO2_NON_DIRECT
		PLIC_INT_GPIO2_NON_DIRECT
		PLIC_INT_GPIO2_NON_DIRECT
		PLIC_INT_GPIO2_NON_DIRECT
		PLIC_INT_GPIO2_NON_DIRECT
		PLIC_INT_GPIO2_NON_DIRECT
		PLIC_INT_GPIO2_NON_DIRECT
		PLIC_INT_GPIO2_NON_DIRECT
		PLIC_INT_GPIO2_NON_DIRECT
		PLIC_INT_GPIO2_NON_DIRECT
		PLIC_INT_GPIO2_NON_DIRECT
		PLIC_INT_GPIO2_NON_DIRECT>;
	status = "okay";
};

&rtc {
	status = "okay";
};

&usb {
	status = "okay";
};

&mbox {
	status = "okay";
};

&pcie {
	status = "okay";
};

