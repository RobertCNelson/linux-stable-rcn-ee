# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/media/microchip,mipi-csi2rx.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: Microchip MIPI CSI-2 Receiver Subsystem

maintainers:
  - Shravan Chiappa  <shravan.chippa@microchip.com>

description:
  The Microchip MIPI CSI-2 Receiver Subsystem is used to capture MIPI CSI-2
  traffic from compliant camera sensors and send the output as AXI4 Stream
  video data for image processing.
  The subsystem consists of a MIPI D-PHY in slave mode which captures the
  data packets. This is passed along the MIPI CSI-2 Rx IP which extracts the
  packet data.

properties:
  compatible:
    items:
      - enum:
          - microchip,mipi-csi2-rx-rtl-v0

  reg:
    maxItems: 1

  interrupts:
    maxItems: 1

  clocks:
    items:
      - description: AXI Lite clock
      - description: Video frame clock

  clock-names:
    items:
      - const: axi
      - const: video

  microchip,csi-pxl-format:
    description: |
      This denotes the CSI Data type selected in hw design.
      Possible values are as below -
      0x24 - RGB888
      0x2a - RAW8
      0x2b - RAW10
      0x2c - RAW12
      0x2d - RAW14
      0x2e - RAW16
    $ref: /schemas/types.yaml#/definitions/uint32
    enum: [0x24, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e]
    default: 0x2a

  microchip,csi-fixed-out-raw8:
    type: boolean
    description: Present when Video Format output is raw8 fixed

  ports:
    $ref: /schemas/graph.yaml#/properties/ports

    properties:
      port@0:
        $ref: /schemas/graph.yaml#/$defs/port-base
        description: |
          Input / sink port node, single endpoint describing the
          CSI-2 transmitter.

        properties:
          endpoint:
            $ref: /schemas/media/video-interfaces.yaml#
            unevaluatedProperties: false

            properties:
              data-lanes:
                description: |
                  This is required only in the sink port 0 endpoint which
                  connects to MIPI CSI-2 source like sensor.
                  The possible values are -
                  1       - For 1 lane enabled in IP.
                  1 2     - For 2 lanes enabled in IP.
                  1 2 3   - For 3 lanes enabled in IP.
                  1 2 3 4 - For 4 lanes enabled in IP.
                items:
                  - const: 1
                  - const: 2
                  - const: 3
                  - const: 4

            required:
              - data-lanes

        unevaluatedProperties: false

      port@1:
        $ref: /schemas/graph.yaml#/properties/port
        description: |
          Output / source port node, endpoint describing modules
          connected the CSI-2 receiver.

required:
  - compatible
  - reg
  - interrupts
  - clocks
  - clock-names
  - microchip,csi-pxl-format
  - ports

additionalProperties: false

examples:
  - |
    mcsi2rx_0: csi2rx@50020000 {
        compatible = "microchip,mipi-csi2-rx";
        reg = <0x50020000 0x10000>;
        interrupt-parent = <&plic>;
        interrupts = <120>;
        microchip,csi-pxl-format = <0x2a>;
        clock-names = "axi", "video";
        clocks = <&axi_clk_0>, <&video_clk_0>;
        status = "okay";

        ports {
            #address-cells = <1>;
            #size-cells = <0>;

            port@0 {
                /* Sink port */
                reg = <0>;
                csi_0_in: endpoint {
                    data-lanes = <1 2 3 4>;
                    /* MIPI CSI-2 Camera handle */
                    remote-endpoint = <&camera_out>;
                };
            };
            port@1 {
                /* Source port */
                reg = <1>;
                csi_0_out: endpoint {
                    remote-endpoint = <&vproc_in>;
                };
            };
        };
    };
...
